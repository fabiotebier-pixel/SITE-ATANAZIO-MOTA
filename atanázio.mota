<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Portal Escolar</title>
  <style>
    :root{
      --bg:#0f172a; /* slate-900 */
      --panel:#111827; /* gray-900 */
      --muted:#1f2937; /* gray-800 */
      --card:#0b1222; /* custom dark */
      --text:#e5e7eb; /* gray-200 */
      --sub:#9ca3af; /* gray-400 */
      --brand:#22d3ee; /* cyan-400 */
      --brand-2:#38bdf8; /* sky-400 */
      --ok:#22c55e; --warn:#f59e0b; --bad:#ef4444;
      --radius:16px;
      --shadow: 0 10px 30px rgba(0,0,0,.35);
    }
    *{box-sizing:border-box}
    html,body{height:100%}
    body{margin:0;background:linear-gradient(120deg,var(--bg),#040b17);color:var(--text);font-family:system-ui,-apple-system,Segoe UI,Roboto,Inter,Ubuntu,Arial,sans-serif}
    a{color:inherit}
    .container{max-width:1100px;margin:0 auto;padding:24px}
    .card{background:linear-gradient(180deg,var(--panel),var(--card));border:1px solid #1f2937;border-radius:var(--radius);box-shadow:var(--shadow)}
    .btn{appearance:none;border:0;border-radius:12px;padding:10px 14px;font-weight:600;cursor:pointer;transition:.2s;display:inline-flex;align-items:center;gap:8px}
    .btn:hover{transform:translateY(-1px)}
    .btn:disabled{opacity:.6;cursor:not-allowed;transform:none}
    .btn-primary{background:linear-gradient(90deg,var(--brand),var(--brand-2));color:#03121a}
    .btn-ghost{background:#0b1222;border:1px solid #1f2937;color:#cbd5e1}
    .btn-danger{background:linear-gradient(90deg,#ef4444,#f97316);color:white}
    .btn-ok{background:linear-gradient(90deg,#34d399,#10b981);color:#052014}
    input,select,textarea{width:100%;background:#0b1222;border:1px solid #1f2937;color:var(--text);padding:10px;border-radius:10px;outline:none}
    label{font-size:12px;color:var(--sub)}
    .grid{display:grid;gap:16px}
    .grid-2{grid-template-columns:repeat(2,minmax(0,1fr))}
    .grid-3{grid-template-columns:repeat(3,minmax(0,1fr))}
    .grid-4{grid-template-columns:repeat(4,minmax(0,1fr))}
    @media(max-width:900px){.grid-3,.grid-4{grid-template-columns:repeat(2,1fr)}.grid-2{grid-template-columns:1fr}}
    @media(max-width:600px){.grid-3,.grid-4{grid-template-columns:1fr}}
    .nav{position:sticky;top:0;z-index:10;background:rgba(10,16,30,.8);backdrop-filter:blur(8px);border-bottom:1px solid #1f2937}
    .nav-inner{display:flex;align-items:center;gap:14px;justify-content:space-between;padding:12px 24px}
    .brand{display:flex;align-items:center;gap:10px;font-weight:800}
    .brand .logo{width:36px;height:36px;border-radius:12px;background:linear-gradient(135deg,var(--brand),var(--brand-2));box-shadow:0 6px 18px rgba(56,189,248,.35)}
    .tabs{display:flex;flex-wrap:wrap;gap:8px}
    .tab{padding:8px 12px;border-radius:12px;border:1px solid #1f2937;background:#0b1222;color:#cbd5e1;cursor:pointer}
    .tab.active{background:linear-gradient(90deg,var(--brand),var(--brand-2));color:#03121a;border-color:transparent}
    .hero{display:grid;grid-template-columns:1.2fr .8fr;gap:24px;align-items:center}
    @media(max-width:900px){.hero{grid-template-columns:1fr}}
    .pill{display:inline-flex;align-items:center;gap:8px;background:#091324;border:1px solid #1e293b;padding:6px 10px;border-radius:999px;color:#a5b4fc}
    .footer{opacity:.7;text-align:center;padding:24px}
    table{width:100%;border-collapse:separate;border-spacing:0 10px}
    th,td{text-align:left;padding:10px 12px}
    thead th{font-size:12px;color:#a1a1aa}
    tbody tr{background:#0b1222;border:1px solid #1f2937}
    tbody tr td:first-child{border-radius:10px 0 0 10px}
    tbody tr td:last-child{border-radius:0 10px 10px 0}
    .tag{font-size:11px;padding:4px 8px;border-radius:999px;background:#0b1222;border:1px solid #1f2937;color:#93c5fd}
    .hidden{display:none}
    .right{text-align:right}
    .section-title{display:flex;align-items:center;justify-content:space-between;gap:12px}
    .kbd{font-family:ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, monospace;background:#0b1222;border:1px solid #1f2937;padding:2px 6px;border-radius:6px;color:#93c5fd}
    .notice{padding:12px;border-radius:12px;background:#0b1222;border:1px dashed #334155;color:#cbd5e1}
    .modal{position:fixed;inset:0;background:rgba(2,6,23,.7);display:flex;align-items:center;justify-content:center;padding:20px;z-index:50}
    .modal>.dialog{max-width:720px;width:100%}
  </style>
</head>
<body>
  <!-- NAVBAR -->
  <div class="nav">
    <div class="nav-inner container">
      <div class="brand"><div class="logo"></div><span id="schoolNameBrand">Escola Estadual Indígena de Tempo Integral</span></div>
      <div class="tabs" id="tabs"></div>
      <div id="userBox"></div>
    </div>
  </div>

  <!-- MAIN -->
  <main class="container" id="app">
    <!-- LOGIN CARD -->
    <section id="loginView" class="card" style="max-width:520px;margin:60px auto;padding:22px 22px 26px 22px;">
      <div style="display:flex;flex-direction:column;gap:14px;">
        <div style="display:flex;align-items:center;gap:12px;">
          <div class="logo" style="width:44px;height:44px"></div>
          <div>
            <div class="pill">Portal Escolar • Acesso</div>
            <h2 style="margin:8px 0 0 0">Entrar</h2>
            <div style="font-size:13px;color:var(--sub)">Use seu e‑mail e senha de professor.</div>
          </div>
        </div>
        <div class="grid">
          <div>
            <label>E‑mail</label>
            <input id="loginEmail" type="email" placeholder="prof@escola.rr.gov.br" />
          </div>
          <div>
            <label>Senha</label>
            <input id="loginPass" type="password" placeholder="••••••" />
          </div>
          <button class="btn btn-primary" id="btnLogin">Entrar</button>
          <div class="notice">Demo rápido: <span class="kbd">admin@escola</span> / <span class="kbd">123456</span>. Depois, no menu <b>Configurações</b>, altere o nome da escola e os usuários.</div>
        </div>
      </div>
    </section>

    <!-- APP VIEWS (renderizadas após login) -->
    <section id="homeView" class="hidden">
      <div class="hero">
        <div class="card" style="padding:24px">
          <span class="pill">Bem‑vindo(a) ao Portal</span>
          <h1 style="margin:12px 0 10px 0" id="schoolNameHeading">Escola Estadual Indígena de Tempo Integral</h1>
          <p style="opacity:.85">Este portal centraliza as rotinas pedagógicas: alunos, diário de classe, bimestres, notas, rendimento, atas e declarações. Todos os dados ficam <b>no seu navegador</b> (localStorage). Use <b>Backup</b> para exportar/importar.</p>
          <div style="margin-top:16px;display:flex;gap:8px;flex-wrap:wrap">
            <button class="btn btn-primary" data-nav="alunos">Gerenciar Alunos</button>
            <button class="btn btn-ghost" data-nav="plataformas">Plataformas</button>
            <button class="btn btn-ghost" data-nav="servicos">Serviços</button>
            <button class="btn btn-ghost" data-nav="contato">Contato</button>
          </div>
        </div>
        <div class="card" style="padding:0;overflow:hidden">
          <div style="aspect-ratio:16/10;background:radial-gradient(1200px 500px at -10% -40%, rgba(56,189,248,.15), transparent),radial-gradient(900px 500px at 120% 120%, rgba(34,211,238,.18), transparent), linear-gradient(180deg,#0b1222,#0b1222)"></div>
          <div style="padding:18px 22px;border-top:1px solid #1f2937;display:flex;align-items:center;justify-content:space-between;gap:10px">
            <div>
              <div style="font-weight:700">Capa simples</div>
              <div style="font-size:13px;color:var(--sub)">Personalize em Configurações</div>
            </div>
            <button class="btn btn-ghost" data-nav="config">Configurações</button>
          </div>
        </div>
      </div>
    </section>

    <!-- ALUNOS -->
    <section id="alunosView" class="hidden">
      <div class="section-title">
        <h2>Alunos</h2>
        <div style="display:flex;gap:8px">
          <button class="btn btn-primary" id="btnAddAluno">+ Adicionar</button>
          <button class="btn btn-ghost" id="btnExport">Exportar JSON</button>
          <label class="btn btn-ghost" for="importFile" style="cursor:pointer">Importar JSON<input id="importFile" type="file" accept="application/json" style="display:none"></label>
        </div>
      </div>
      <div class="card" style="padding:16px">
        <div class="grid grid-3">
          <div><label>Buscar</label><input id="alunoSearch" placeholder="Nome, matrícula…"></div>
          <div><label>Turma/Série</label><input id="alunoFilterTurma" placeholder="Ex.: 6º ano A"></div>
          <div><label class="hidden">.</label><button class="btn btn-ghost" id="btnClearFilters">Limpar filtros</button></div>
        </div>
        <div id="alunosTable" style="margin-top:12px"></div>
      </div>
    </section>

    <!-- PLATAFORMAS -->
    <section id="plataformasView" class="hidden">
      <div class="section-title"><h2>Plataformas</h2></div>
      <div class="grid grid-3">
        <div class="card" style="padding:16px">
          <div class="section-title"><b>Diário de Classe</b><button class="btn btn-ghost" onclick="openDiario()">Abrir</button></div>
          <p style="opacity:.8">Registre data, conteúdo e observações por turma.</p>
        </div>
        <div class="card" style="padding:16px">
          <div class="section-title"><b>Bimestre</b><button class="btn btn-ghost" onclick="openBimestres()">Abrir</button></div>
          <p style="opacity:.8">Defina o bimestre atual e períodos.</p>
        </div>
        <div class="card" style="padding:16px">
          <div class="section-title"><b>Notas de Alunos</b><button class="btn btn-ghost" onclick="openNotas()">Abrir</button></div>
          <p style="opacity:.8">Lance notas por aluno, disciplina e bimestre.</p>
        </div>
        <div class="card" style="padding:16px">
          <div class="section-title"><b>Rendimento</b><button class="btn btn-ghost" onclick="openRendimento()">Abrir</button></div>
          <p style="opacity:.8">Acompanhe médias por turma.
        </div>
        <div class="card" style="padding:16px">
          <div class="section-title"><b>Ata Final</b><button class="btn btn-ghost" onclick="openAtaFinal()">Abrir</button></div>
          <p style="opacity:.8">Gere texto base da ata final.</p>
        </div>
        <div class="card" style="padding:16px">
          <div class="section-title"><b>Ficha Individual</b><button class="btn btn-ghost" onclick="openFicha()">Abrir</button></div>
          <p style="opacity:.8">Dados do aluno e histórico resumido.</p>
        </div>
        <div class="card" style="padding:16px">
          <div class="section-title"><b>Declaração de Transferência</b><button class="btn btn-ghost" onclick="openDeclaracao('transferencia')">Abrir</button></div>
          <p style="opacity:.8">Gere e imprima a declaração.</p>
        </div>
        <div class="card" style="padding:16px">
          <div class="section-title"><b>Declaração de Matrícula</b><button class="btn btn-ghost" onclick="openDeclaracao('matricula')">Abrir</button></div>
          <p style="opacity:.8">Gere e imprima a declaração.</p>
        </div>
        <div class="card" style="padding:16px">
          <div class="section-title"><b>Histórico Escolar</b><button class="btn btn-ghost" onclick="openHistorico()">Abrir</button></div>
          <p style="opacity:.8">Consolida notas por disciplina/bimestre.</p>
        </div>
      </div>
    </section>

    <!-- SERVIÇOS -->
    <section id="servicosView" class="hidden">
      <div class="section-title"><h2>Serviços</h2></div>
      <div class="grid grid-3">
        <div class="card" style="padding:16px">
          <b>Configurações</b>
          <p class="sub">Nome da escola, ano letivo, usuários.</p>
          <button class="btn btn-ghost" data-nav="config">Abrir</button>
        </div>
        <div class="card" style="padding:16px">
          <b>Backup</b>
          <p class="sub">Exporte/importe todos os dados (JSON).</p>
          <button class="btn btn-ghost" data-nav="backup">Abrir</button>
        </div>
        <div class="card" style="padding:16px">
          <b>Suporte</b>
          <p class="sub">Guia rápido de uso.</p>
          <button class="btn btn-ghost" onclick="openSuporte()">Abrir</button>
        </div>
      </div>
    </section>

    <!-- CONTATO -->
    <section id="contatoView" class="hidden">
      <div class="section-title"><h2>Contato</h2></div>
      <div class="grid grid-2">
        <div class="card" style="padding:16px">
          <b>Direção/Secretaria</b>
          <div class="grid">
            <div><label>E‑mail institucional</label><input id="contatoEmail" placeholder="escola@seed.rr.gov.br"></div>
            <div><label>Telefone</label><input id="contatoTel" placeholder="(95) 0000‑0000"></div>
            <div><label>Endereço</label><input id="contatoEnd" placeholder="Comunidade/BR, Município – RR"></div>
            <button class="btn btn-primary" onclick="saveContato()">Salvar</button>
          </div>
        </div>
        <div class="card" style="padding:16px">
          <b>Mensagem</b>
          <p class="sub">Formulário ilustrativo (não envia e‑mail).</p>
          <div class="grid">
            <input placeholder="Seu nome">
            <input placeholder="Seu e‑mail">
            <textarea rows="5" placeholder="Escreva sua mensagem…"></textarea>
            <button class="btn btn-ghost" disabled>Enviar (simulação)</button>
          </div>
        </div>
      </div>
    </section>

    <!-- CONFIGURAÇÕES -->
    <section id="configView" class="hidden">
      <div class="section-title"><h2>Configurações</h2></div>
      <div class="grid grid-2">
        <div class="card" style="padding:16px">
          <b>Identidade</b>
          <div class="grid">
            <div><label>Nome da Escola</label><input id="cfgSchoolName"></div>
            <div class="grid grid-2">
              <div><label>Ano letivo</label><input id="cfgAno" type="number" min="2000" max="2100"></div>
              <div><label>Bimestre atual</label>
                <select id="cfgBim"><option>1º</option><option>2º</option><option>3º</option><option>4º</option></select>
              </div>
            </div>
            <button class="btn btn-primary" onclick="saveConfig()">Salvar</button>
          </div>
        </div>
        <div class="card" style="padding:16px">
          <b>Usuários (Professores)</b>
          <div id="usersBox" class="grid" style="margin-top:8px"></div>
          <button class="btn btn-ghost" onclick="addUser()">+ Adicionar usuário</button>
        </div>
      </div>
    </section>

    <!-- BACKUP -->
    <section id="backupView" class="hidden">
      <div class="section-title"><h2>Backup</h2></div>
      <div class="card" style="padding:16px">
        <p>Faça download de todos os dados (alunos, notas, diário, configurações, usuários) em um arquivo JSON e depois importe quando precisar.</p>
        <div style="display:flex;gap:8px;flex-wrap:wrap;margin-top:12px">
          <button class="btn btn-primary" onclick="downloadBackup()">Baixar backup</button>
          <label class="btn btn-ghost" for="restoreFile" style="cursor:pointer">Restaurar de arquivo<input id="restoreFile" type="file" accept="application/json" style="display:none"></label>
        </div>
      </div>
    </section>
  </main>

  <footer class="footer">
    <small>Portal Escolar (versão local). Dados salvos no seu navegador. Sugestão: publique este arquivo em qualquer hospedagem estática para acesso pelos professores.</small>
  </footer>

  <!-- MODAL DINÂMICA -->
  <div id="modalRoot" class="hidden"></div>

  <script>
    /* ==========================
       ARMAZENAMENTO & ESTADO
       ========================== */
    const DB_KEY = 'portal_escolar_v1';
    const state = {
      user: null,
      view: 'login',
      data: {
        config: { schoolName: 'Escola Estadual Indígena de Tempo Integral Atanázi(o) Mota', ano: new Date().getFullYear(), bimestre: '1º' },
        contato: { email: '', tel: '', end: '' },
        users: [
          { id: uid(), email: 'admin@escola', name: 'Admin', role: 'admin', pass: '123456' },
          { id: uid(), email: 'prof1@escola', name: 'Prof. 1', role: 'prof', pass: '123456' },
          { id: uid(), email: 'prof2@escola', name: 'Prof. 2', role: 'prof', pass: '123456' },
        ],
        alunos: [
          // {id, nome, turma, matricula}
        ],
        diario: {
          // turma: [ {data, conteudo, obs} ]
        },
        notas: [
          // { alunoId, disciplina, bimestre, nota }
        ]
      }
    };

    function load(){
      const raw = localStorage.getItem(DB_KEY);
      if(raw){ try{ state.data = JSON.parse(raw);}catch(e){ console.warn('JSON inválido'); }}
      renderAll();
    }
    function save(){ localStorage.setItem(DB_KEY, JSON.stringify(state.data)); }
    function uid(){ return Math.random().toString(36).slice(2,10)+Date.now().toString(36).slice(-4); }

    /* ==========================
       NAVIGAÇÃO
       ========================== */
    const ROUTES = [
      {key:'home', label:'Início'},
      {key:'alunos', label:'Alunos'},
      {key:'plataformas', label:'Plataformas'},
      {key:'servicos', label:'Serviços'},
      {key:'contato', label:'Contato'},
      {key:'config', label:'Configurações'},
      {key:'backup', label:'Backup'}
    ];

    function go(view){
      state.view = view;
      [...document.querySelectorAll('main section')].forEach(s=>s.classList.add('hidden'));
      if(view==='login'){
        document.getElementById('loginView').classList.remove('hidden');
      }else{
        document.getElementById(view+'View').classList.remove('hidden');
      }
      updateTabs();
    }

    function updateTabs(){
      const tabs = document.getElementById('tabs');
      tabs.innerHTML = '';
      if(!state.user) return;
      ROUTES.forEach(r=>{
        const b = document.createElement('button');
        b.className = 'tab'+(state.view===r.key?' active':'');
        b.textContent = r.label;
        b.onclick = ()=>go(r.key);
        tabs.appendChild(b);
      });
      const userBox = document.getElementById('userBox');
      userBox.innerHTML = '';
      if(state.user){
        const span = document.createElement('span');
        span.style.opacity=.8; span.style.fontSize='13px';
        span.textContent = state.user.name + ' • ' + state.user.email;
        const out = document.createElement('button'); out.className='btn btn-ghost'; out.textContent='Sair'; out.onclick=logout;
        const wrap = document.createElement('div'); wrap.style.display='flex'; wrap.style.alignItems='center'; wrap.style.gap='8px';
        wrap.append(span,out); userBox.appendChild(wrap);
      }
    }

    /* ==========================
       LOGIN
       ========================== */
    document.getElementById('btnLogin').onclick = ()=>{
      const email = document.getElementById('loginEmail').value.trim();
      const pass = document.getElementById('loginPass').value.trim();
      const u = state.data.users.find(x=>x.email===email && x.pass===pass);
      if(!u){ alert('Credenciais inválidas.'); return; }
      state.user = { id:u.id, name:u.name, email:u.email, role:u.role };
      document.getElementById('loginView').classList.add('hidden');
      go('home');
    };
    function logout(){ state.user=null; updateTabs(); go('login'); }

    /* ==========================
       HOME / CONFIG
       ========================== */
    function renderHome(){
      document.getElementById('schoolNameBrand').textContent = state.data.config.schoolName;
      document.getElementById('schoolNameHeading').textContent = state.data.config.schoolName;
    }
    function renderConfig(){
      document.getElementById('cfgSchoolName').value = state.data.config.schoolName || '';
      document.getElementById('cfgAno').value = state.data.config.ano || new Date().getFullYear();
      document.getElementById('cfgBim').value = state.data.config.bimestre || '1º';
      // usuários
      const box = document.getElementById('usersBox'); box.innerHTML='';
      state.data.users.forEach((u,i)=>{
        const row = document.createElement('div'); row.className='grid grid-3';
        row.innerHTML = `
          <div><label>Nome</label><input data-u="name" data-i="${i}" value="${escapeHtml(u.name)}"></div>
          <div><label>E‑mail</label><input data-u="email" data-i="${i}" value="${escapeHtml(u.email)}"></div>
          <div><label>Senha</label><input data-u="pass" data-i="${i}" value="${escapeHtml(u.pass)}"></div>
        `;
        box.appendChild(row);
      });
      box.querySelectorAll('input').forEach(inp=>{
        inp.onchange = (e)=>{
          const i = +e.target.getAttribute('data-i');
          const k = e.target.getAttribute('data-u');
          state.data.users[i][k] = e.target.value;
          save();
        };
      });
    }
    function saveConfig(){
      state.data.config.schoolName = document.getElementById('cfgSchoolName').value.trim() || 'Minha Escola';
      state.data.config.ano = +document.getElementById('cfgAno').value || new Date().getFullYear();
      state.data.config.bimestre = document.getElementById('cfgBim').value;
      save(); renderHome(); alert('Configurações salvas.');
    }
    function addUser(){ state.data.users.push({id:uid(),name:'Novo(a)',email:'novo@escola',pass:'123456',role:'prof'}); save(); renderConfig(); }

    /* ==========================
       ALUNOS
       ========================== */
    document.getElementById('btnAddAluno').onclick = ()=> openAlunoForm();
    document.getElementById('btnExport').onclick = downloadBackup;
    document.getElementById('importFile').addEventListener('change', e=>restoreFromFile(e.target.files[0]));
    document.getElementById('btnClearFilters').onclick = ()=>{ document.getElementById('alunoSearch').value=''; document.getElementById('alunoFilterTurma').value=''; renderAlunos(); };
    document.getElementById('alunoSearch').oninput = renderAlunos;
    document.getElementById('alunoFilterTurma').oninput = renderAlunos;

    function renderAlunos(){
      const q = document.getElementById('alunoSearch').value.toLowerCase();
      const turma = document.getElementById('alunoFilterTurma').value.toLowerCase();
      let list = [...state.data.alunos];
      if(q) list = list.filter(a=> (a.nome||'').toLowerCase().includes(q) || (a.matricula||'').toLowerCase().includes(q));
      if(turma) list = list.filter(a=> (a.turma||'').toLowerCase().includes(turma));

      const wrap = document.getElementById('alunosTable');
      const rows = list.map(a=>`
        <tr>
          <td><b>${escapeHtml(a.nome||'')}</b><div class="sub">Matrícula: ${escapeHtml(a.matricula||'')}</div></td>
          <td>${escapeHtml(a.turma||'')}</td>
          <td class="right">
            <button class="btn btn-ghost" onclick="openAlunoForm('${a.id}')">Editar</button>
            <button class="btn btn-ghost" onclick="openFicha('${a.id}')">Ficha</button>
            <button class="btn btn-danger" onclick="delAluno('${a.id}')">Excluir</button>
          </td>
        </tr>`).join('');
      wrap.innerHTML = `
        <table>
          <thead><tr><th>Aluno</th><th>Turma</th><th class="right">Ações</th></tr></thead>
          <tbody>${rows || '<tr><td colspan="3" class="sub">Nenhum aluno.</td></tr>'}</tbody>
        </table>`;
    }

    function openAlunoForm(id){
      const isEdit = !!id;
      const a = isEdit? state.data.alunos.find(x=>x.id===id) : {id:uid(), nome:'', turma:'', matricula:''};
      showModal(`
        <div class="dialog card" style="padding:16px">
          <div class="section-title"><h3>${isEdit?'Editar':'Novo'} aluno</h3><button class="btn btn-ghost" onclick="closeModal()">Fechar</button></div>
          <div class="grid grid-2" style="margin-top:8px">
            <div><label>Nome</label><input id="mNome" value="${escapeHtml(a.nome)}"></div>
            <div><label>Turma/Série</label><input id="mTurma" value="${escapeHtml(a.turma)}"></div>
            <div><label>Matrícula</label><input id="mMat" value="${escapeHtml(a.matricula)}"></div>
          </div>
          <div style="display:flex;gap:8px;margin-top:12px">
            <button class="btn btn-primary" onclick="saveAluno('${a.id}','${isEdit}')">Salvar</button>
          </div>
        </div>
      `);
    }
    function saveAluno(id,isEdit){
      const nome = document.getElementById('mNome').value.trim();
      const turma = document.getElementById('mTurma').value.trim();
      const matricula = document.getElementById('mMat').value.trim();
      if(!nome){ alert('Informe o nome.'); return; }
      if(isEdit==='true'){
        const i = state.data.alunos.findIndex(x=>x.id===id); if(i>-1){ state.data.alunos[i].nome=nome; state.data.alunos[i].turma=turma; state.data.alunos[i].matricula=matricula; }
      }else{
        state.data.alunos.push({id, nome, turma, matricula});
      }
      save(); closeModal(); renderAlunos();
    }
    function delAluno(id){ if(confirm('Excluir aluno?')){ state.data.alunos = state.data.alunos.filter(a=>a.id!==id); save(); renderAlunos(); } }

    /* ==========================
       PLATAFORMAS
       ========================== */
    function openDiario(){
      const turmas = getTurmas();
      showModal(`
        <div class="dialog card" style="padding:16px">
          <div class="section-title"><h3>Diário de Classe</h3><button class="btn btn-ghost" onclick="closeModal()">Fechar</button></div>
          <div class="grid grid-2" style="margin-top:8px">
            <div>
              <label>Turma</label>
              <select id="dTurma">${turmas.map(t=>`<option>${escapeHtml(t)}</option>`).join('')}</select>
            </div>
            <div><label>Data</label><input id="dData" type="date" value="${new Date().toISOString().slice(0,10)}"></div>
            <div class="grid" style="grid-column:1/-1"><label>Conteúdo</label><textarea id="dCont" rows="4" placeholder="Assunto, objetivos…"></textarea></div>
            <div class="grid" style="grid-column:1/-1"><label>Observações</label><textarea id="dObs" rows="3" placeholder="Faltas, ocorrências…"></textarea></div>
            <button class="btn btn-primary" onclick="saveDiario()">Adicionar</button>
          </div>
          <div id="diarioList" style="margin-top:12px"></div>
        </div>
      `);
      renderDiarioList();
      document.getElementById('dTurma').onchange = renderDiarioList;
    }
    function saveDiario(){
      const turma = document.getElementById('dTurma').value; const data = document.getElementById('dData').value; const conteudo = document.getElementById('dCont').value; const obs = document.getElementById('dObs').value;
      if(!turma || !data) return alert('Turma e data obrigatórias.');
      if(!state.data.diario[turma]) state.data.diario[turma] = [];
      state.data.diario[turma].push({data,conteudo,obs}); save(); renderDiarioList(); document.getElementById('dCont').value=''; document.getElementById('dObs').value='';
    }
    function renderDiarioList(){
      const turma = document.getElementById('dTurma').value;
      const list = (state.data.diario[turma]||[]).slice().reverse();
      const box = document.getElementById('diarioList');
      box.innerHTML = list.map((it,i)=>`<div class="card" style="padding:12px;margin-top:8px"><b>${it.data}</b><div class="sub">${escapeHtml(it.conteudo||'')}</div><div style="opacity:.8">${escapeHtml(it.obs||'')}</div></div>`).join('') || '<div class="sub">Sem registros.</div>';
    }

    function openBimestres(){
      showModal(`
        <div class="dialog card" style="padding:16px">
          <div class="section-title"><h3>Bimestres</h3><button class="btn btn-ghost" onclick="closeModal()">Fechar</button></div>
          <div class="grid grid-2" style="margin-top:8px">
            <div><label>Bimestre atual</label>
              <select id="bmAtual"><option>1º</option><option>2º</option><option>3º</option><option>4º</option></select>
            </div>
            <div><label>Ano letivo</label><input id="bmAno" type="number" min="2000" max="2100"></div>
            <button class="btn btn-primary" onclick="saveBimestres()">Salvar</button>
          </div>
        </div>
      `);
      document.getElementById('bmAtual').value = state.data.config.bimestre;
      document.getElementById('bmAno').value = state.data.config.ano;
    }
    function saveBimestres(){ state.data.config.bimestre = document.getElementById('bmAtual').value; state.data.config.ano = +document.getElementById('bmAno').value; save(); renderHome(); alert('Atualizado.'); }

    function openNotas(){
      const alunos = state.data.alunos;
      if(!alunos.length) return alert('Cadastre alunos primeiro.');
      showModal(`
        <div class="dialog card" style="padding:16px">
          <div class="section-title"><h3>Notas</h3><button class="btn btn-ghost" onclick="closeModal()">Fechar</button></div>
          <div class="grid grid-4" style="margin-top:8px">
            <div><label>Aluno</label><select id="nAluno">${alunos.map(a=>`<option value="${a.id}">${escapeHtml(a.nome)}</option>`).join('')}</select></div>
            <div><label>Disciplina</label><input id="nDisc" placeholder="Ex.: Português"></div>
            <div><label>Bimestre</label><select id="nBim"><option>1º</option><option>2º</option><option>3º</option><option>4º</option></select></div>
            <div><label>Nota</label><input id="nNota" type="number" step="0.1" min="0" max="10" placeholder="0 a 10"></div>
            <button class="btn btn-primary" onclick="saveNota()">Adicionar</button>
          </div>
          <div id="notasList" style="margin-top:12px"></div>
        </div>
      `);
      renderNotasList();
      document.getElementById('nAluno').onchange = renderNotasList;
    }
    function saveNota(){
      const alunoId = document.getElementById('nAluno').value;
      const disciplina = document.getElementById('nDisc').value.trim();
      const bimestre = document.getElementById('nBim').value;
      const nota = parseFloat(document.getElementById('nNota').value);
      if(!disciplina || isNaN(nota)) return alert('Informe disciplina e nota.');
      state.data.notas.push({alunoId, disciplina, bimestre, nota}); save(); renderNotasList();
      document.getElementById('nDisc').value=''; document.getElementById('nNota').value='';
    }
    function renderNotasList(){
      const alunoId = document.getElementById('nAluno').value;
      const aluno = state.data.alunos.find(a=>a.id===alunoId);
      const list = state.data.notas.filter(n=>n.alunoId===alunoId);
      const box = document.getElementById('notasList');
      if(!aluno){ box.innerHTML=''; return; }
      const rows = list.map((n,i)=>`<tr><td>${escapeHtml(n.disciplina)}</td><td>${escapeHtml(n.bimestre)}</td><td>${n.nota.toFixed(1)}</td><td class="right"><button class="btn btn-ghost" onclick="delNota(${state.data.notas.indexOf(n)})">Excluir</button></td></tr>`).join('');
      box.innerHTML = `<div class="card" style="padding:12px"><b>${escapeHtml(aluno.nome)}</b><div class="sub">${escapeHtml(aluno.turma||'')}</div></div>
        <table style="margin-top:8px"><thead><tr><th>Disciplina</th><th>Bimestre</th><th>Nota</th><th></th></tr></thead><tbody>${rows||'<tr><td colspan="4" class="sub">Sem notas.</td></tr>'}</tbody></table>`;
    }
    function delNota(i){ if(confirm('Excluir nota?')){ state.data.notas.splice(i,1); save(); renderNotasList(); } }

    function openRendimento(){
      const turmas = getTurmas();
      if(!turmas.length) return alert('Cadastre alunos com turma.');
      showModal(`
        <div class="dialog card" style="padding:16px">
          <div class="section-title"><h3>Rendimento por turma</h3><button class="btn btn-ghost" onclick="closeModal()">Fechar</button></div>
          <div class="grid grid-2" style="margin-top:8px">
            <div><label>Turma</label><select id="rTurma">${turmas.map(t=>`<option>${escapeHtml(t)}</option>`).join('')}</select></div>
            <div><label>Bimestre</label><select id="rBim"><option>1º</option><option>2º</option><option>3º</option><option>4º</option></select></div>
          </div>
          <div id="rendList" style="margin-top:12px"></div>
        </div>
      `);
      document.getElementById('rTurma').onchange = renderRendimento;
      document.getElementById('rBim').onchange = renderRendimento;
      renderRendimento();
    }
    function renderRendimento(){
      const turma = document.getElementById('rTurma').value; const bim = document.getElementById('rBim').value;
      const alunos = state.data.alunos.filter(a=>a.turma===turma);
      const rows = alunos.map(a=>{
        const ns = state.data.notas.filter(n=>n.alunoId===a.id && n.bimestre===bim);
        const media = ns.length? (ns.reduce((s,n)=>s+n.nota,0)/ns.length).toFixed(1):'-';
        const tag = media==='-'? '<span class="tag">Sem notas</span>' : (media>=6? `<span class="tag" style="color:#86efac">Aprov.</span>`:`<span class="tag" style="color:#fca5a5">Atenção</span>`);
        return `<tr><td><b>${escapeHtml(a.nome)}</b><div class="sub">${escapeHtml(a.matricula||'')}</div></td><td>${media}</td><td>${tag}</td></tr>`;
      }).join('');
      document.getElementById('rendList').innerHTML = `<table><thead><tr><th>Aluno</th><th>Média</th><th>Status</th></tr></thead><tbody>${rows||'<tr><td colspan="3" class="sub">Sem alunos.</td></tr>'}</tbody></table>`;
    }

    function openAtaFinal(){
      const turmas = getTurmas();
      showModal(`
        <div class="dialog card" style="padding:16px">
          <div class="section-title"><h3>Ata Final (texto base)</h3><button class="btn btn-ghost" onclick="closeModal()">Fechar</button></div>
          <div class="grid grid-2" style="margin-top:8px">
            <div><label>Turma</label><select id="aTurma">${turmas.map(t=>`<option>${escapeHtml(t)}</option>`).join('')}</select></div>
            <div><label>Data</label><input id="aData" type="date" value="${new Date().toISOString().slice(0,10)}"></div>
            <div class="grid" style="grid-column:1/-1"><label>Texto</label><textarea id="aTexto" rows="8"></textarea></div>
            <button class="btn btn-primary" onclick="printText('aTexto')">Imprimir</button>
          </div>
        </div>
      `);
      const txt = `Aos ${new Date().toLocaleDateString()}, reuniram-se os membros do Colegiado/Conselho de Classe da turma __TURMA__ desta unidade escolar, para apreciação dos resultados finais do ano letivo de ${state.data.config.ano}. Após análise das frequências e rendimentos, deliberou-se conforme registros no sistema e arquivos físicos da secretaria.`;
      document.getElementById('aTexto').value = txt.replace('__TURMA__', document.getElementById('aTurma').value||'');
    }

    function openFicha(id){
      let a = state.data.alunos.find(x=>x.id===id);
      if(!a){ if(!state.data.alunos.length) return alert('Cadastre alunos.'); a = state.data.alunos[0]; }
      showModal(`
        <div class="dialog card" style="padding:16px">
          <div class="section-title"><h3>Ficha Individual</h3><button class="btn btn-ghost" onclick="closeModal()">Fechar</button></div>
          <div><b>${escapeHtml(a.nome)}</b> • ${escapeHtml(a.turma||'')} • Matrícula: ${escapeHtml(a.matricula||'')}</div>
          <div id="fichanotas" style="margin-top:12px"></div>
          <div style="display:flex;gap:8px;margin-top:12px"><button class="btn btn-ghost" onclick="window.print()">Imprimir</button></div>
        </div>
      `);
      const ns = state.data.notas.filter(n=>n.alunoId===a.id);
      const grupos = groupBy(ns, x=>x.disciplina+':'+x.bimestre);
      const rows = Object.entries(grupos).map(([k,arr])=>{
        const [disc, bim] = k.split(':');
        const media = (arr.reduce((s,n)=>s+n.nota,0)/arr.length).toFixed(1);
        return `<tr><td>${escapeHtml(disc)}</td><td>${escapeHtml(bim)}</td><td>${media}</td></tr>`;
      }).join('');
      document.getElementById('fichanotas').innerHTML = `<table><thead><tr><th>Disciplina</th><th>Bimestre</th><th>Média</th></tr></thead><tbody>${rows||'<tr><td colspan="3" class="sub">Sem notas.</td></tr>'}</tbody></table>`;
    }

    function openDeclaracao(tipo){
      if(!state.data.alunos.length) return alert('Cadastre alunos.');
      showModal(`
        <div class="dialog card" style="padding:16px">
          <div class="section-title"><h3>Declaração de ${tipo==='transferencia'?'Transferência':'Matrícula'}</h3><button class="btn btn-ghost" onclick="closeModal()">Fechar</button></div>
          <div class="grid grid-2" style="margin-top:8px">
            <div><label>Aluno</label><select id="dcAluno">${state.data.alunos.map(a=>`<option value="${a.id}">${escapeHtml(a.nome)}</option>`).join('')}</select></div>
            <div><label>Validade (dias)</label><input id="dcVal" type="number" value="30"></div>
            <div class="grid" style="grid-column:1/-1"><label>Texto</label><textarea id="dcTexto" rows="8"></textarea></div>
            <button class="btn btn-primary" onclick="printText('dcTexto')">Imprimir</button>
          </div>
        </div>
      `);
      const a = state.data.alunos[0];
      const base = tipo==='transferencia'
        ? `Declaramos para os devidos fins que ${a?.nome||'_____'}, matrícula ${a?.matricula||'_____'}, turma ${a?.turma||'_____'}, encontra-se em processo de TRANSFERÊNCIA nesta unidade escolar ${state.data.config.schoolName}, ano letivo de ${state.data.config.ano}. Esta declaração tem validade de __VAL__ dias.`
        : `Declaramos para os devidos fins que ${a?.nome||'_____'}, matrícula ${a?.matricula||'_____'}, está regularmente matriculado(a) na ${state.data.config.schoolName}, turma ${a?.turma||'_____'}, no ano letivo de ${state.data.config.ano}. Esta declaração tem validade de __VAL__ dias.`;
      document.getElementById('dcTexto').value = base.replace('__VAL__', document.getElementById('dcVal').value);
      document.getElementById('dcAluno').onchange = (e)=>{
        const al = state.data.alunos.find(x=>x.id===e.target.value);
        document.getElementById('dcTexto').value = base
          .replaceAll(a?.nome||'_____', al?.nome||'_____')
          .replaceAll(a?.matricula||'_____', al?.matricula||'_____')
          .replaceAll(a?.turma||'_____', al?.turma||'_____')
          .replace('__VAL__', document.getElementById('dcVal').value);
      };
      document.getElementById('dcVal').oninput = ()=>{
        const t = document.getElementById('dcTexto').value; document.getElementById('dcTexto').value = t.replace(/validade de (\d+|__VAL__) dias\./, `validade de ${document.getElementById('dcVal').value} dias.`)
      }
    }

    function openHistorico(){
      if(!state.data.alunos.length) return alert('Cadastre alunos.');
      showModal(`
        <div class="dialog card" style="padding:16px">
          <div class="section-title"><h3>Histórico Escolar (resumo)</h3><button class="btn btn-ghost" onclick="closeModal()">Fechar</button></div>
          <div><label>Aluno</label><select id="hAluno">${state.data.alunos.map(a=>`<option value="${a.id}">${escapeHtml(a.nome)}</option>`).join('')}</select></div>
          <div id="histBox" style="margin-top:12px"></div>
          <div style="display:flex;gap:8px;margin-top:12px"><button class="btn btn-ghost" onclick="window.print()">Imprimir</button></div>
        </div>
      `);
      const select = document.getElementById('hAluno');
      const render = ()=>{
        const id = select.value; const a = state.data.alunos.find(x=>x.id===id);
        const ns = state.data.notas.filter(n=>n.alunoId===id);
        const byDisc = groupBy(ns, n=>n.disciplina);
        const rows = Object.entries(byDisc).map(([disc, arr])=>{
          const porBim = groupBy(arr, x=>x.bimestre);
          const parts = ['1º','2º','3º','4º'].map(b=>{
            const xs = porBim[b]||[]; const m = xs.length?(xs.reduce((s,n)=>s+n.nota,0)/xs.length).toFixed(1):'-';
            return `<td>${m}</td>`;
          }).join('');
          const mediaAnualArr = arr.map(x=>x.nota); const mediaAnual = mediaAnualArr.length?(mediaAnualArr.reduce((s,n)=>s+n,0)/mediaAnualArr.length).toFixed(1):'-';
          return `<tr><td>${escapeHtml(disc)}</td>${parts}<td>${mediaAnual}</td></tr>`;
        }).join('');
        document.getElementById('histBox').innerHTML = `<div class="card" style="padding:12px"><b>${escapeHtml(a.nome)}</b> • ${escapeHtml(a.turma||'')}</div>
          <table style="margin-top:8px"><thead><tr><th>Disciplina</th><th>1º</th><th>2º</th><th>3º</th><th>4º</th><th>Média</th></tr></thead><tbody>${rows||'<tr><td colspan="6" class="sub">Sem notas.</td></tr>'}</tbody></table>`;
      };
      select.onchange = render; render();
    }

    /* ==========================
       CONTATO / BACKUP / SUPORTE
       ========================== */
    function saveContato(){
      state.data.contato = {
        email: document.getElementById('contatoEmail').value.trim(),
        tel: document.getElementById('contatoTel').value.trim(),
        end: document.getElementById('contatoEnd').value.trim(),
      }; save(); alert('Contato salvo.');
    }
    function downloadBackup(){
      const blob = new Blob([JSON.stringify(state.data,null,2)], {type:'application/json'});
      const a = document.createElement('a'); a.href = URL.createObjectURL(blob); a.download = 'portal-escolar-backup.json'; a.click();
    }
    document.getElementById('restoreFile').addEventListener('change', e=>restoreFromFile(e.target.files[0]));
    function restoreFromFile(file){
      if(!file) return; const reader = new FileReader(); reader.onload = ()=>{ try{ const obj = JSON.parse(reader.result); state.data = obj; save(); alert('Backup restaurado.'); renderAll(); }catch(e){ alert('Arquivo inválido.'); } }; reader.readAsText(file);
    }
    function openSuporte(){
      showModal(`
        <div class="dialog card" style="padding:16px">
          <div class="section-title"><h3>Guia rápido</h3><button class="btn btn-ghost" onclick="closeModal()">Fechar</button></div>
          <ol style="line-height:1.8">
            <li>Entre com o usuário demo (<span class="kbd">admin@escola</span>/<span class="kbd">123456</span>).</li>
            <li>Abra <b>Configurações</b> e personalize o <b>nome da escola</b> e <b>usuários</b>.</li>
            <li>Cadastre alunos em <b>Alunos</b> (nome, turma e matrícula).</li>
            <li>Lance <b>notas</b> e registre o <b>diário de classe</b> nas <b>Plataformas</b>.</li>
            <li>Gere <b>declarações</b>, <b>ata</b>, <b>ficha</b> e <b>histórico</b> conforme necessário.</li>
            <li>Use <b>Backup</b> para salvar/recuperar seus dados (JSON).</li>
          </ol>
          <p class="notice">Este é um sistema local (sem servidor). Não use para dados sigilosos. Para multiusuário real, será necessário hospedar com backend (ex.: Firebase/Supabase).</p>
        </div>
      `);
    }

    /* ==========================
       HELPERS
       ========================== */
    function escapeHtml(str){ return (str||'').replace(/[&<>"']/g, s=>({"&":"&amp;","<":"&lt;",">":"&gt;","\"":"&quot;","'":"&#039;"}[s])); }
    function groupBy(arr, fn){ return arr.reduce((acc,x)=>{ const k = typeof fn==='function'? fn(x): x[fn]; (acc[k] ||= []).push(x); return acc; },{}); }
    function getTurmas(){ return [...new Set(state.data.alunos.map(a=>a.turma).filter(Boolean))]; }

    function showModal(html){
      const root = document.getElementById('modalRoot'); root.className='modal'; root.innerHTML = html;
    }
    function closeModal(){ const root = document.getElementById('modalRoot'); root.className='hidden'; root.innerHTML=''; }
    function printText(id){ const t = document.getElementById(id).value; const w = window.open('', '_blank'); w.document.write(`<pre style="white-space:pre-wrap;font:14px system-ui">${escapeHtml(t)}</pre>`); w.document.close(); w.focus(); w.print(); }

    function renderAll(){
      renderHome(); renderConfig(); renderAlunos(); updateTabs();
      if(state.user){ go(state.view==='login'?'home':state.view); } else { go('login'); }
    }

    // Navegação por botões com data-nav
    document.addEventListener('click', (e)=>{
      const el = e.target.closest('[data-nav]'); if(el){ go(el.getAttribute('data-nav')); }
    });

    // Inicializa
    load();
  </script>
</body>
</html>
